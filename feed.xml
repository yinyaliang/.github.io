<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-02-23T10:04:27+08:00</updated><id>/feed.xml</id><title type="html">尹亚亮</title><subtitle>An amazing website.</subtitle><author><name>Your Name</name></author><entry><title type="html">leetcode-golang-easy-01</title><link href="/leetcode-golang-easy-01/" rel="alternate" type="text/html" title="leetcode-golang-easy-01" /><published>2023-02-23T00:00:00+08:00</published><updated>2023-02-23T00:00:00+08:00</updated><id>/leetcode-golang-easy-01</id><content type="html" xml:base="/leetcode-golang-easy-01/"><![CDATA[<h3 id="两数之和">两数之和</h3>

<div class="language-golang highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">/*
 * @lc app=leetcode.cn id=1 lang=golang
 *
 * [1] 两数之和
 */</span>

<span class="c">// @lc code=start</span>
<span class="k">func</span> <span class="n">twoSum</span><span class="p">(</span><span class="n">nums</span> <span class="p">[]</span><span class="kt">int</span><span class="p">,</span> <span class="n">target</span> <span class="kt">int</span><span class="p">)</span> <span class="p">[]</span><span class="kt">int</span> <span class="p">{</span>          <span class="c">// nums 是是一个整数数组,target是目标值</span>
	<span class="n">numMap</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="k">map</span><span class="p">[</span><span class="kt">int</span><span class="p">]</span><span class="kt">int</span><span class="p">)</span>                  <span class="c">// 储存没个数字的补数</span>
	<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">num</span> <span class="o">:=</span> <span class="k">range</span> <span class="n">nums</span> <span class="p">{</span>                   <span class="c">// 循环nums,i为num索引</span>
		<span class="n">com</span> <span class="o">:=</span> <span class="n">target</span> <span class="o">-</span> <span class="n">num</span>                  <span class="c">// com + num = target</span>
		<span class="k">if</span> <span class="n">index</span><span class="p">,</span> <span class="n">ok</span> <span class="o">:=</span> <span class="n">numMap</span><span class="p">[</span><span class="n">com</span><span class="p">];</span> <span class="n">ok</span> <span class="p">{</span>    <span class="c">// 判断numMap中是否存在 com值,index为com索引</span>
			<span class="k">return</span> <span class="p">[]</span><span class="kt">int</span><span class="p">{</span><span class="n">index</span><span class="p">,</span> <span class="n">i</span><span class="p">}</span>       <span class="c">// 返回com索引(index),num索引(i)</span>
		<span class="p">}</span>
		<span class="n">numMap</span><span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span>                      <span class="c">// 存储num和它的索引</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="p">[]</span><span class="kt">int</span><span class="p">{}</span>                               
<span class="p">}</span>

<span class="c">// @lc code=end</span>

</code></pre></div></div>

<h3 id="回文数">回文数</h3>

<div class="language-golang highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">/*
 * @lc app=leetcode.cn id=9 lang=golang
 *
 * [9] 回文数
 */</span>

<span class="c">// @lc code=start</span>
<span class="k">func</span> <span class="n">isPalindrome</span><span class="p">(</span><span class="n">x</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">bool</span> <span class="p">{</span>
	<span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="m">0</span> <span class="p">{</span>
		<span class="k">return</span> <span class="no">false</span>                       <span class="c">// 负数不可能是回文数</span>
	<span class="p">}</span>


	<span class="k">var</span> <span class="n">r</span> <span class="kt">int</span>                           
	<span class="k">for</span> <span class="n">i</span> <span class="o">:=</span> <span class="n">x</span><span class="p">;</span> <span class="n">i</span> <span class="o">!=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">/=</span> <span class="m">10</span> <span class="p">{</span>               
		<span class="n">r</span> <span class="o">=</span> <span class="n">r</span><span class="o">*</span><span class="m">10</span> <span class="o">+</span> <span class="n">i</span><span class="o">%</span><span class="m">10</span>                   <span class="c">// 将x的每一位数取出来，加到r的末尾</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">r</span> <span class="o">==</span> <span class="n">x</span>
<span class="p">}</span>

<span class="c">// @lc code=end</span>
</code></pre></div></div>]]></content><author><name>Your Name</name></author><category term="leetcode" /><summary type="html"><![CDATA[两数之和]]></summary></entry><entry><title type="html">Job</title><link href="/kubernetes-kubeadm-job/" rel="alternate" type="text/html" title="Job" /><published>2022-12-15T00:00:00+08:00</published><updated>2022-12-15T00:00:00+08:00</updated><id>/kubernetes-kubeadm-job</id><content type="html" xml:base="/kubernetes-kubeadm-job/"><![CDATA[<p>Job</p>

<p>临时使用或者是定期运行的工作,可以通过 cronjob实现</p>

<h3 id="创建及删除job">创建及删除job</h3>

<p>job用于临时性任务,成功则job结束，失败则创建新的或者重启pod</p>

<h4 id="创建空间">创建空间</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl create ns nsjob
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl create ns nsjob
namespace/nsjob created
<span class="o">[</span>root@master probe]# kubens nsjob
Context <span class="s2">"kubernetes-admin@kubernetes"</span> modified.
Active namespace is <span class="s2">"nsjob"</span><span class="nb">.</span>
</code></pre></div></div>

<h4 id="创建job">创建job</h4>

<p>两种方式,命令行或者是生成yaml,建议命令行生成yaml再修改生成job</p>

<p>kubectl create job 名字 –image=镜像 – “命令”</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl create job job1 <span class="nt">--image</span><span class="o">=</span>busybox <span class="nt">--dry-run</span><span class="o">=</span>client <span class="nt">-o</span> yaml <span class="nt">--</span> sh <span class="nt">-c</span> <span class="s2">"echo hello &amp;&amp; sleep 10"</span> <span class="o">&gt;</span> job.yaml
</code></pre></div></div>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">batch/v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Job</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">job1</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">template</span><span class="pi">:</span>
    <span class="na">metadata</span><span class="pi">:</span>
      <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
    <span class="na">spec</span><span class="pi">:</span>
      <span class="na">containers</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">command</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">sh</span>
        <span class="pi">-</span> <span class="s">-c</span>
        <span class="pi">-</span> <span class="s">echo hello &amp;&amp; sleep </span><span class="m">10</span>
        <span class="na">image</span><span class="pi">:</span> <span class="s">busybox</span>
        <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
        <span class="na">name</span><span class="pi">:</span> <span class="s">job1</span>
        <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
      <span class="na">restartPolicy</span><span class="pi">:</span> <span class="s">Never</span>
<span class="na">status</span><span class="pi">:</span> <span class="pi">{}</span>
</code></pre></div></div>

<p>增加IfNotPresent</p>

<p>job的restart 策略有两种:</p>

<ul>
  <li>Never: 只要任务没有完成,则新创建pod运行，知道job完成,会产生多个pod</li>
  <li>OnFailure: 只要pod没有完成, 就会重启pod,重新执行任务</li>
</ul>

<h4 id="创建job-1">创建job</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl apply <span class="nt">-f</span> job.yaml 
job.batch/job1 created
</code></pre></div></div>

<h4 id="查看job状态">查看job状态</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get <span class="nb">jobs
</span>NAME   COMPLETIONS   DURATION   AGE
job1   1/1           11s        34s
</code></pre></div></div>

<p>1/1显示完成</p>

<h4 id="删除pod">删除pod</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl delete job job1
job.batch <span class="s2">"job1"</span> deleted
</code></pre></div></div>

<h4 id="job中指定参数">job中指定参数</h4>

<p>parallelism: N  并行运行N个pod，parallelism的值 不会超过completions</p>

<p>completions: M  job测试多次的话,要有M次要成功才算成功,即要有M个状态为Complete的pod,如果没有就重复执行</p>

<p>backoffLimit: N  如果job失败,则重试几次</p>

<p>activeDeadlineSeconds: N  job运行的最长时间，单位: 秒</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">batch/v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Job</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">job1</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">parallelism</span><span class="pi">:</span> <span class="m">3</span>
  <span class="na">completions</span><span class="pi">:</span> <span class="m">6</span>
  <span class="na">backoffLimit</span><span class="pi">:</span> <span class="m">4</span>
  <span class="na">template</span><span class="pi">:</span>
    <span class="na">metadata</span><span class="pi">:</span>
      <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
    <span class="na">spec</span><span class="pi">:</span>
      <span class="na">containers</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">command</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">sh</span>
        <span class="pi">-</span> <span class="s">-c</span>
        <span class="pi">-</span> <span class="s">echo hello &amp;&amp; sleep </span><span class="m">10</span>
        <span class="na">image</span><span class="pi">:</span> <span class="s">busybox</span>
        <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
        <span class="na">name</span><span class="pi">:</span> <span class="s">job1</span>
        <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
      <span class="na">restartPolicy</span><span class="pi">:</span> <span class="s">Never</span>
<span class="na">status</span><span class="pi">:</span> <span class="pi">{}</span>
</code></pre></div></div>

<p>并行设置3个,要有6个pod处于完成状态才可以</p>

<h4 id="创建">创建</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl apply <span class="nt">-f</span> job.yaml 
job.batch/job1 created
</code></pre></div></div>

<h4 id="查看pod">查看pod</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get pods
NAME         READY   STATUS      RESTARTS   AGE
job1-9m4rl   0/1     Completed   0          17s
job1-hhm75   1/1     Running     0          5s
job1-l9kqn   1/1     Running     0          5s
job1-pw7kk   0/1     Completed   0          17s
job1-qmdxd   0/1     Completed   0          17s
job1-rm44q   1/1     Running     0          5s
</code></pre></div></div>

<p>有三个运行的job</p>

<h4 id="查看job">查看job</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get <span class="nb">jobs
</span>NAME   COMPLETIONS   DURATION   AGE
job1   6/6           24s        68s
</code></pre></div></div>

<h4 id="再次看pod的状态">再次看pod的状态</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get pods
NAME         READY   STATUS      RESTARTS   AGE
job1-9m4rl   0/1     Completed   0          95s
job1-hhm75   0/1     Completed   0          83s
job1-l9kqn   0/1     Completed   0          83s
job1-pw7kk   0/1     Completed   0          95s
job1-qmdxd   0/1     Completed   0          95s
job1-rm44q   0/1     Completed   0          83s
</code></pre></div></div>

<h4 id="删除">删除</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl delete <span class="nt">-f</span> job.yaml 
job.batch <span class="s2">"job1"</span> deleted
</code></pre></div></div>

<h4 id="测试失败">测试失败</h4>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">batch/v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Job</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">job1</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">parallelism</span><span class="pi">:</span> <span class="m">3</span>
  <span class="na">completions</span><span class="pi">:</span> <span class="m">6</span>
  <span class="na">backoffLimit</span><span class="pi">:</span> <span class="m">4</span>
  <span class="na">template</span><span class="pi">:</span>
    <span class="na">metadata</span><span class="pi">:</span>
      <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
    <span class="na">spec</span><span class="pi">:</span>
      <span class="na">containers</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">command</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">sh</span>
        <span class="pi">-</span> <span class="s">-c</span>
        <span class="pi">-</span> <span class="s">echoX hello &amp;&amp; sleep </span><span class="m">10</span>
        <span class="na">image</span><span class="pi">:</span> <span class="s">busybox</span>
        <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
        <span class="na">name</span><span class="pi">:</span> <span class="s">job1</span>
        <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
      <span class="na">restartPolicy</span><span class="pi">:</span> <span class="s">Never</span>
<span class="na">status</span><span class="pi">:</span> <span class="pi">{}</span>
<span class="s">~</span>              
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl apply <span class="nt">-f</span> job.yaml 
job.batch/job1 created
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get pods
NAME         READY   STATUS   RESTARTS   AGE
job1-6858m   0/1     Error    0          6s
job1-dbpgx   0/1     Error    0          9s
job1-gndds   0/1     Error    0          8s
job1-nb9gr   0/1     Error    0          8s
job1-xh45n   0/1     Error    0          9s
job1-xnhqb   0/1     Error    0          9s
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl delete <span class="nt">-f</span> job.yaml 
job.batch <span class="s2">"job1"</span> deleted
</code></pre></div></div>

<h3 id="创建及删除cronjob">创建及删除cronjob</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get cj
No resources found <span class="k">in </span>nsjob namespace.
</code></pre></div></div>

<h4 id="命令创建">命令创建</h4>

<p>kubectl create cj 名字 –image=镜像 –schedule=”*/1 * * * *” – /bin/sh -c “命令”</p>

<p>–schedule 定时</p>

<h4 id="yaml创建">yaml创建</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl create cj job2 <span class="nt">--image</span><span class="o">=</span>busybox <span class="nt">--schedule</span><span class="o">=</span><span class="s2">"*/1 * * * *"</span> <span class="nt">--dry-run</span><span class="o">=</span>client <span class="nt">-o</span> yaml <span class="nt">--</span> /bin/sh <span class="nt">-c</span> <span class="s2">"echo hello world"</span> <span class="o">&gt;</span> job2.yaml
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apiVersion: batch/v1
kind: CronJob
metadata:
  creationTimestamp: null
  name: job2
spec:
  jobTemplate:
    metadata:
      creationTimestamp: null
      name: job2
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - <span class="nb">command</span>:
            - /bin/sh
            - <span class="nt">-c</span>
            - <span class="nb">echo </span>hello world
            image: busybox
            name: job2
            resources: <span class="o">{}</span>
          restartPolicy: OnFailure
  schedule: <span class="s1">'*/1 * * * *'</span>
status: <span class="o">{}</span>
</code></pre></div></div>

<h4 id="创建-1">创建</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl apply <span class="nt">-f</span> job2.yaml 
cronjob.batch/job2 created
</code></pre></div></div>

<h4 id="查看">查看</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get cj
NAME   SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE
job2   <span class="k">*</span>/1 <span class="k">*</span> <span class="k">*</span> <span class="k">*</span> <span class="k">*</span>   False     0        &lt;none&gt;          10s
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get pods
NAME                  READY   STATUS              RESTARTS   AGE
job2-27642647-th984   0/1     ContainerCreating   0          21s
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get pods
NAME                  READY   STATUS      RESTARTS   AGE
job2-27642647-th984   0/1     Completed   0          79s
job2-27642648-wgkzc   0/1     Completed   0          19s
</code></pre></div></div>

<h4 id="删除-1">删除</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl delete <span class="nt">-f</span> job2.yaml 
cronjob.batch <span class="s2">"job2"</span> deleted
</code></pre></div></div>]]></content><author><name>Your Name</name></author><category term="Kubernetes" /><summary type="html"><![CDATA[Job]]></summary></entry><entry><title type="html">探针</title><link href="/kubernetes-kubeadm-probe/" rel="alternate" type="text/html" title="探针" /><published>2022-11-20T00:00:00+08:00</published><updated>2022-11-20T00:00:00+08:00</updated><id>/kubernetes-kubeadm-probe</id><content type="html" xml:base="/kubernetes-kubeadm-probe/"><![CDATA[<p>probe</p>

<h3 id="为pod配置liveness探针">为pod配置liveness探针</h3>

<p>deployment 只能保证pod的状态为running,内部服务状态无法保证</p>

<table>
  <thead>
    <tr>
      <th>deployment</th>
      <th>检测你出勤了没有</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>probe</td>
      <td>检查你是否在工作</td>
    </tr>
  </tbody>
</table>

<p>liveness 检查到某个pod运行有问题,就会重启，实际就是创建一个同名的Pod</p>

<h4 id="command探测">command探测</h4>

<p>容器内部执行命令,返回0 正常，0 异常</p>

<h4 id="创建目录">创建目录</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir </span>probe
<span class="nb">cd </span>probe
</code></pre></div></div>

<h4 id="创建namespace">创建namespace</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl create ns nsprobe
namespace/nsprobe created
<span class="o">[</span>root@master probe]# kubens nsprobe
Context <span class="s2">"kubernetes-admin@kubernetes"</span> modified.
Active namespace is <span class="s2">"nsprobe"</span><span class="nb">.</span>
</code></pre></div></div>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span>  <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span>  <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">test</span><span class="pi">:</span>  <span class="s">liveness</span>
  <span class="na">name</span><span class="pi">:</span>  <span class="s">liveness-exec</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">containers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span>  <span class="s">liveness</span>
    <span class="na">image</span><span class="pi">:</span>  <span class="s">busybox</span>
    <span class="na">imagePullPolicy</span><span class="pi">:</span>  <span class="s">IfNotPresent</span>
    <span class="na">args</span><span class="pi">:</span>
    <span class="pi">-</span>  <span class="s">/bin/sh</span>
    <span class="pi">-</span>  <span class="s">-c</span>
    <span class="pi">-</span>  <span class="s">touch /tmp/healthy; sleep 30 ; rm -rf /tmp/healthy; sleep </span><span class="m">1000</span>
    <span class="na">livenessProbe</span><span class="pi">:</span>
      <span class="na">exec</span><span class="pi">:</span>
        <span class="na">command</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">cat</span>
        <span class="pi">-</span> <span class="s">/tmp/healthy</span>
      <span class="na">initialDelaySeconds</span><span class="pi">:</span>  <span class="m">5</span> <span class="c1"># 启动的5s内不探测</span>
      <span class="na">periodSeconds</span><span class="pi">:</span>  <span class="m">5</span> <span class="c1"># 每5s探测一次</span>
</code></pre></div></div>

<p>initialDelaySeconds: pod启动多少秒内不探测</p>

<p>periodSeconds: 探测间隔</p>

<p>successThreshold: 探测失败后,最少连续探测成功后多少次才被认定为成功,默认为1</p>

<p>failureThreshold: 探测失败后kubernetes的重拾次数 默认为3,最小值是1</p>

<h4 id="创建">创建</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl apply <span class="nt">-f</span> liveness1.yaml 
pod/liveness-exec created
</code></pre></div></div>

<h4 id="查看">查看</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get pods
NAME            READY   STATUS    RESTARTS   AGE
liveness-exec   1/1     Running   2          2m53s
</code></pre></div></div>

<h4 id="检查tmphealthy是否存在">检查/tmp/healthy是否存在</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[root@master probe]# kubectl exec liveness-exec -- ls /tmp
[root@master probe]# kubectl get pods
NAME            READY   STATUS    RESTARTS   AGE
liveness-exec   1/1     Running   3          4m30s
</code></pre></div></div>

<p>这里healthy文件被删除了,pod被重建</p>

<h4 id="liveness-probe-httpget探测方式">liveness probe httpget探测方式</h4>

<p>http是否可以访问,下面是通过80端口访问到/usr/shar/nginx/html/index.html</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span>  <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span>  <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">test</span><span class="pi">:</span>  <span class="s">liveness</span>
  <span class="na">name</span><span class="pi">:</span>  <span class="s">liveness-http</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">containers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span>  <span class="s">liveness</span>
    <span class="na">image</span><span class="pi">:</span>  <span class="s">nginx</span>
    <span class="na">imagePullPolicy</span><span class="pi">:</span>  <span class="s">IfNotPresent</span>
    <span class="na">livenessProbe</span><span class="pi">:</span>
      <span class="na">failureThreshold</span><span class="pi">:</span>  <span class="m">3</span>
      <span class="na">httpGet</span><span class="pi">:</span>
        <span class="na">path</span><span class="pi">:</span>  <span class="s">/index.html</span>
        <span class="na">port</span><span class="pi">:</span>  <span class="m">80</span>
        <span class="na">scheme</span><span class="pi">:</span>  <span class="s">HTTP</span>
      <span class="na">initialDelaySeconds</span><span class="pi">:</span>  <span class="m">10</span>
      <span class="na">periodSeconds</span><span class="pi">:</span>  <span class="m">10</span>
      <span class="na">successThreshold</span><span class="pi">:</span>  <span class="m">1</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl apply <span class="nt">-f</span> liveness-http.yaml 
pod/liveness-http created
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get pods
NAME            READY   STATUS             RESTARTS   AGE
liveness-exec   0/1     CrashLoopBackOff   7          14m
liveness-http   1/1     Running            0          87s
</code></pre></div></div>

<p>删除index.html</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl <span class="nb">exec</span> <span class="nt">-it</span> liveness-http <span class="nt">--</span> bash
root@liveness-http:/# <span class="nb">rm</span> <span class="nt">-rf</span> /usr/share/nginx/html/
50x.html    index.html  
root@liveness-http:/# <span class="nb">rm</span> <span class="nt">-rf</span> /usr/share/nginx/html/index.html 
root@liveness-http:/# 
<span class="nb">exit</span>
</code></pre></div></div>

<p>查看</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl <span class="nb">exec</span> <span class="nt">-it</span> liveness-http <span class="nt">--</span> <span class="nb">ls</span> /usr/share/nginx/html/
50x.html  index.html
</code></pre></div></div>

<p>index.html存在，证明pod已经重新拉起</p>

<h4 id="liveness-probe-tcpsocket的探测方式">liveness probe tcpsocket的探测方式</h4>

<p>是否可以tcp三次握手</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span>  <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span>  <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">test</span><span class="pi">:</span>  <span class="s">liveness</span>
  <span class="na">name</span><span class="pi">:</span>  <span class="s">liveness-tcp</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">containers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span>  <span class="s">liveness</span>
    <span class="na">image</span><span class="pi">:</span>  <span class="s">nginx</span>
    <span class="na">imagePullPolicy</span><span class="pi">:</span>  <span class="s">IfNotPresent</span>
    <span class="na">livenessProbe</span><span class="pi">:</span>
      <span class="na">failureThreshold</span><span class="pi">:</span>  <span class="m">3</span>
      <span class="na">tcpSocket</span><span class="pi">:</span>
        <span class="na">port</span><span class="pi">:</span>  <span class="m">808</span>
      <span class="na">initialDelaySeconds</span><span class="pi">:</span>  <span class="m">5</span>
      <span class="na">periodSeconds</span><span class="pi">:</span>  <span class="m">5</span>
</code></pre></div></div>

<p>nginx 端口是80,这里探测808 肯定失败</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl apply <span class="nt">-f</span> liveness-tcp.yaml 
pod/liveness-tcp created
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get pods
NAME            READY   STATUS             RESTARTS   AGE
liveness-exec   0/1     CrashLoopBackOff   9          23m
liveness-http   1/1     Running            1          9m33s
liveness-tcp    1/1     Running            1          30s
</code></pre></div></div>

<p>可以看到完成了一次重启</p>

<h4 id="删除">删除</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl delete pod liveness-exec
pod <span class="s2">"liveness-exec"</span> deleted
<span class="o">[</span>root@master probe]# kubectl delete pod liveness-http
pod <span class="s2">"liveness-http"</span> deleted
<span class="o">[</span>root@master probe]# kubectl delete pod liveness-tcp
pod <span class="s2">"liveness-tcp"</span> deleted
</code></pre></div></div>

<h3 id="为pod配置readliness探针">为pod配置readliness探针</h3>

<p>livenss:  探测到pod有问题后,通过重启pod来解决问题</p>

<p>readliness:  探测到pod有问题之后不重启,只是svc接受到请求后,不再转发请求到这个pod</p>

<h4 id="创建-1">创建</h4>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span>  <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span>  <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">run</span><span class="pi">:</span>  <span class="s">app</span>
  <span class="na">name</span><span class="pi">:</span>  <span class="s">pod1</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">containers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span>  <span class="s">c1</span>
    <span class="na">image</span><span class="pi">:</span>  <span class="s">nginx</span>
    <span class="na">imagePullPolicy</span><span class="pi">:</span>  <span class="s">IfNotPresent</span>
    <span class="na">lifecycle</span><span class="pi">:</span>
      <span class="na">postStart</span><span class="pi">:</span>
        <span class="na">exec</span><span class="pi">:</span>
          <span class="na">command</span><span class="pi">:</span>  <span class="pi">[</span><span class="s2">"</span><span class="s">/bin/bash"</span><span class="pi">,</span><span class="s2">"</span><span class="s">-c"</span><span class="pi">,</span><span class="s2">"</span><span class="s">touch</span><span class="nv"> </span><span class="s">/tmp/healthy"</span><span class="pi">]</span>
    <span class="na">readinessProbe</span><span class="pi">:</span>
      <span class="na">exec</span><span class="pi">:</span>
        <span class="na">command</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">cat</span>
        <span class="pi">-</span> <span class="s">/tmp/healthy</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl apply <span class="nt">-f</span> readiness.yaml 
pod/pod1 created
<span class="o">[</span>root@master probe]# <span class="nb">sed</span> <span class="s1">'s/pod1/pod2/'</span> readiness.yaml | kubectl apply <span class="nt">-f</span> -
pod/pod2 created
<span class="o">[</span>root@master probe]# <span class="nb">sed</span> <span class="s1">'s/pod1/pod3/'</span> readiness.yaml | kubectl apply <span class="nt">-f</span> -
pod/pod3 created
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get pods <span class="nt">--show-labels</span>
NAME   READY   STATUS    RESTARTS   AGE   LABELS
pod1   1/1     Running   0          58s   <span class="nv">run</span><span class="o">=</span>app
pod2   1/1     Running   0          20s   <span class="nv">run</span><span class="o">=</span>app
pod3   1/1     Running   0          15s   <span class="nv">run</span><span class="o">=</span>app
</code></pre></div></div>

<h4 id="创建svc">创建svc</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl expose <span class="nt">--name</span><span class="o">=</span>readsvc pod pod1 <span class="nt">--port</span><span class="o">=</span>80 <span class="nt">--selector</span><span class="o">=</span><span class="nv">run</span><span class="o">=</span>app
service/readsvc exposed
</code></pre></div></div>

<p>这里是为pod1创建svc,因为标签一样,所以readsvc会关联三个pod</p>

<h4 id="修改pod的-indexhtml">修改pod的 index.html</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl <span class="nb">exec</span> <span class="nt">-ti</span> pod1 <span class="nt">--</span> bash
root@pod1:/# <span class="nb">echo </span>111 <span class="o">&gt;</span> /usr/share/nginx/html/index.html 
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl <span class="nb">exec</span> <span class="nt">-ti</span> pod2 <span class="nt">--</span> bash
root@pod2:/# <span class="nb">echo </span>222 <span class="o">&gt;</span> /usr/share/nginx/html/index.html 
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl <span class="nb">exec</span> <span class="nt">-ti</span> pod3 <span class="nt">--</span> bash
root@pod3:/# <span class="nb">echo </span>333 <span class="o">&gt;</span> /usr/share/nginx/html/index.html
</code></pre></div></div>

<h4 id="获取svc的ip地址">获取svc的IP地址</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get svc readsvc
NAME      TYPE        CLUSTER-IP     EXTERNAL-IP   PORT<span class="o">(</span>S<span class="o">)</span>   AGE
readsvc   ClusterIP   10.102.65.92   &lt;none&gt;        80/TCP    3m28s
</code></pre></div></div>

<h4 id="访问测试">访问测试</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# curl <span class="nt">-s</span> 10.102.65.92
111
<span class="o">[</span>root@master probe]# curl <span class="nt">-s</span> 10.102.65.92
333
<span class="o">[</span>root@master probe]# curl <span class="nt">-s</span> 10.102.65.92
333
<span class="o">[</span>root@master probe]# curl <span class="nt">-s</span> 10.102.65.92
222
</code></pre></div></div>

<h4 id="删除pod3里的tmlhealthy">删除pod3里的/tml/healthy</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl <span class="nb">exec</span> <span class="nt">-ti</span> pod3 <span class="nt">--</span> <span class="nb">rm</span> <span class="nt">-rf</span> /tmp/healthy
<span class="o">[</span>root@master probe]# kubectl <span class="nb">exec</span> <span class="nt">-ti</span> pod3 <span class="nt">--</span> <span class="nb">ls</span> <span class="nt">-l</span> /tmp/
total 0
</code></pre></div></div>

<h4 id="查看pod3的状态">查看pod3的状态</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl describe pod pod3
Name:         pod3
Namespace:    nsprobe
Priority:     0
Node:         node1/192.168.122.202
Start Time:   Sat, 23 Jul 2022 13:21:42 +0800
Labels:       <span class="nv">run</span><span class="o">=</span>app
Annotations:  cni.projectcalico.org/containerID: be54cb3773b113867bbb9b53964166def9e455d175dbf2af134bf1801342b85a
              cni.projectcalico.org/podIP: 10.244.166.185/32
              cni.projectcalico.org/podIPs: 10.244.166.185/32
Status:       Running
IP:           10.244.166.185
IPs:
  IP:  10.244.166.185
Containers:
  c1:
    Container ID:   docker://1dfc5239cc2d026ef09d8a5edbde7e8647c0823d24387e201bce0806adf2eeee
    Image:          nginx
    Image ID:       docker-pullable://nginx@sha256:0d17b565c37bcbd895e9d92315a05c1c3c9a29f762b011a10c54a66cd53c9b31
    Port:           &lt;none&gt;
    Host Port:      &lt;none&gt;
    State:          Running
      Started:      Sat, 23 Jul 2022 13:21:43 +0800
    Ready:          False
    Restart Count:  0
    Readiness:      <span class="nb">exec</span> <span class="o">[</span><span class="nb">cat</span> /tmp/healthy] <span class="nv">delay</span><span class="o">=</span>0s <span class="nb">timeout</span><span class="o">=</span>1s <span class="nv">period</span><span class="o">=</span>10s <span class="c">#success=1 #failure=3</span>
    Environment:    &lt;none&gt;
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-db7dv <span class="o">(</span>ro<span class="o">)</span>
Conditions:
  Type              Status
  Initialized       True 
  Ready             False 
  ContainersReady   False 
  PodScheduled      True 
Volumes:
  kube-api-access-db7dv:
    Type:                    Projected <span class="o">(</span>a volume that contains injected data from multiple sources<span class="o">)</span>
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       &lt;nil&gt;
    DownwardAPI:             <span class="nb">true
</span>QoS Class:                   BestEffort
Node-Selectors:              &lt;none&gt;
Tolerations:                 node.kubernetes.io/not-ready:NoExecute <span class="nv">op</span><span class="o">=</span>Exists <span class="k">for </span>300s
                             node.kubernetes.io/unreachable:NoExecute <span class="nv">op</span><span class="o">=</span>Exists <span class="k">for </span>300s
Events:
  Type     Reason     Age               From               Message
  <span class="nt">----</span>     <span class="nt">------</span>     <span class="nt">----</span>              <span class="nt">----</span>               <span class="nt">-------</span>
  Normal   Scheduled  6m53s             default-scheduler  Successfully assigned nsprobe/pod3 to node1
  Normal   Pulled     6m50s             kubelet            Container image <span class="s2">"nginx"</span> already present on machine
  Normal   Created    6m50s             kubelet            Created container c1
  Normal   Started    6m49s             kubelet            Started container c1
  Warning  Unhealthy  0s <span class="o">(</span>x4 over 30s<span class="o">)</span>  kubelet            Readiness probe failed: <span class="nb">cat</span>: /tmp/healthy: No such file or directory
</code></pre></div></div>

<h4 id="再次访问readsvc">再次访问readsvc</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# curl <span class="nt">-s</span> 10.102.65.92
111
<span class="o">[</span>root@master probe]# curl <span class="nt">-s</span> 10.102.65.92
222
<span class="o">[</span>root@master probe]# curl <span class="nt">-s</span> 10.102.65.92
111
</code></pre></div></div>

<p>可以看到请求不再转发给pod3了</p>

<h4 id="查看pod的状态">查看pod的状态</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl get pods
NAME   READY   STATUS    RESTARTS   AGE
pod1   1/1     Running   0          8m55s
pod2   1/1     Running   0          8m17s
pod3   0/1     Running   0          8m12s
</code></pre></div></div>

<p>虽然svc不再转发请求到pod3,但pod3的容器依然是正常运行的</p>

<h4 id="删除-1">删除</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@master probe]# kubectl delete svc readsvc
service <span class="s2">"readsvc"</span> deleted
<span class="o">[</span>root@master probe]# kubectl delete pod pod<span class="o">{</span>1,2,3<span class="o">}</span> <span class="nt">--force</span>
warning: Immediate deletion does not <span class="nb">wait </span><span class="k">for </span>confirmation that the running resource has been terminated. The resource may <span class="k">continue </span>to run on the cluster indefinitely.
pod <span class="s2">"pod1"</span> force deleted
pod <span class="s2">"pod2"</span> force deleted
pod <span class="s2">"pod3"</span> force deleted
</code></pre></div></div>]]></content><author><name>Your Name</name></author><category term="Kubernetes" /><summary type="html"><![CDATA[probe]]></summary></entry><entry><title type="html">Netlink 简介</title><link href="/linux-netlink/" rel="alternate" type="text/html" title="Netlink 简介" /><published>2022-11-20T00:00:00+08:00</published><updated>2022-11-20T00:00:00+08:00</updated><id>/linux-netlink</id><content type="html" xml:base="/linux-netlink/"><![CDATA[<p>netlink 简介</p>

<h3 id="netlink">netlink</h3>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// net/netlink  位置</span>
<span class="n">af_netlink</span><span class="p">.</span><span class="n">c</span>
<span class="n">af_netlink</span><span class="p">.</span><span class="n">h</span>
<span class="n">genetlink</span><span class="p">.</span><span class="n">c</span>
<span class="n">diag</span><span class="p">.</span><span class="n">c</span>
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 优点</span>
<span class="c1">// 不需要轮询</span>
<span class="c1">// 内核可以向用户空间发送异步消息</span>
<span class="c1">// 支持组播</span>
</code></pre></div></div>

<h4 id="创建netlink套接字">创建netlink套接字</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>用户空间: sock(AF_NETLINK,SOCK_RAW|SOCK_CLEXEC,NETLINK_ROUTE) -&gt; netlink_create() -&gt; _netlink_create()
内核空间: netlink_kernel_create() -&gt; _netlink_create()
</code></pre></div></div>

<h4 id="库文件">库文件</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://netfilter.org/projects/libmnl/
</code></pre></div></div>

<h4 id="sockaddr_nl">sockaddr_nl</h4>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// include/uapi/linux/netlink.h</span>
<span class="k">struct</span> <span class="n">sockaddr_nl</span><span class="p">{</span>
	<span class="n">__kernel_sa_family_t</span>	<span class="n">nl_family</span><span class="p">;</span>    <span class="cm">/*AF_NETLINK*/</span>
	<span class="kt">unsigned</span> <span class="kt">short</span> 			<span class="n">nl_pad</span><span class="p">;</span>		  <span class="cm">/*为零*/</span>
	<span class="n">__u32</span> 					<span class="n">nl_pid</span><span class="p">;</span>       <span class="cm">/*端口号*/</span>
	<span class="n">__u32</span> 					<span class="n">nl_groups</span><span class="p">;</span>    <span class="cm">/*组播组掩码*/</span>
<span class="p">}</span>
</code></pre></div></div>

<p>nl_pid 内核套接字,为0。 用户态程序设置为程序PID</p>

<h4 id="netlink消息报头">netlink消息报头</h4>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// include/uapi/linux/netlink.h</span>
<span class="k">struct</span> <span class="n">nlmsghdr</span> <span class="p">{</span>
	<span class="n">__u32</span>		<span class="n">nlmsg_len</span><span class="p">;</span>
	<span class="n">__u16</span>		<span class="n">nlmsg_type</span><span class="p">;</span>
	<span class="n">__u16</span>		<span class="n">nlmsg_flags</span><span class="p">;</span>
	<span class="n">__u32</span>		<span class="n">nlmsg_seq</span><span class="p">;</span>
	<span class="n">__u32</span>		<span class="n">nlmsg_pid</span><span class="p">;</span>
	<span class="n">__u8</span>		<span class="n">nlmsg_data</span><span class="p">[];</span>
<span class="p">};</span>
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//nlmsg_type</span>
<span class="cp">#define NLMSG_NOOP			0x1		</span><span class="cm">/* Nothing.		*/</span><span class="cp">
#define NLMSG_ERROR			0x2		</span><span class="cm">/* Error		*/</span><span class="cp">
#define NLMSG_DONE			0x3		</span><span class="cm">/* End of a dump	*/</span><span class="cp">
#define NLMSG_OVERRUN		0x4		</span><span class="cm">/* Data lost		*/</span><span class="cp">
</span></code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// nlmsg_flags</span>

<span class="cp">#define NLM_F_REQUEST			0x01	</span><span class="cm">/* It is request message. 	*/</span><span class="cp">
#define NLM_F_MULTI				0x02	</span><span class="cm">/* Multipart message, terminated by NLMSG_DONE */</span><span class="cp">
#define NLM_F_ACK				0x04	</span><span class="cm">/* Reply with ack, with zero or error code */</span><span class="cp">
#define NLM_F_ECHO				0x08	</span><span class="cm">/* Receive resulting notifications */</span><span class="cp">
#define NLM_F_DUMP_INTR			0x10	</span><span class="cm">/* Dump was inconsistent due to sequence change */</span><span class="cp">
#define NLM_F_DUMP_FILTERED		0x20	</span><span class="cm">/* Dump was filtered as requested */</span><span class="cp">
</span>
<span class="cm">/* Modifiers to GET request */</span>
<span class="cp">#define NLM_F_ROOT				0x100	</span><span class="cm">/* specify tree	root	*/</span><span class="cp">
#define NLM_F_MATCH				0x200	</span><span class="cm">/* return all matching	*/</span><span class="cp">
#define NLM_F_ATOMIC			0x400	</span><span class="cm">/* atomic GET		*/</span><span class="cp">
#define NLM_F_DUMP				(NLM_F_ROOT|NLM_F_MATCH)
</span>
<span class="cm">/* Modifiers to NEW request */</span>
<span class="cp">#define NLM_F_REPLACE			0x100	</span><span class="cm">/* Override existing		*/</span><span class="cp">
#define NLM_F_EXCL				0x200	</span><span class="cm">/* Do not touch, if it exists	*/</span><span class="cp">
#define NLM_F_CREATE			0x400	</span><span class="cm">/* Create, if it does not exist	*/</span><span class="cp">
#define NLM_F_APPEND			0x800	</span><span class="cm">/* Add to end of list		*/</span><span class="cp">
</span>
<span class="cm">/* Modifiers to DELETE request */</span>
<span class="cp">#define NLM_F_NONREC			0x100	</span><span class="cm">/* Do not delete recursively	*/</span><span class="cp">
#define NLM_F_BULK				0x200	</span><span class="cm">/* Delete multiple objects	*/</span><span class="cp">
</span>
<span class="cm">/* Flags for ACK message */</span>
<span class="cp">#define NLM_F_CAPPED			0x100	</span><span class="cm">/* request was capped */</span><span class="cp">
#define NLM_F_ACK_TLVS			0x200	</span><span class="cm">/* extended ACK TVLs were included */</span><span class="cp">
</span></code></pre></div></div>

<h3 id="ip-route">ip route</h3>

<h4 id="ip-route-add-添加顺序">ip route add 添加顺序</h4>

<ul>
  <li>用户态通过 netlink 协议，发送消息 RTM_NEWROUTE，</li>
  <li>内核态由rtnetlink_rcv() 处理。</li>
  <li>通过调用net/ipv4/fib_frontend.c的inet_rtm_newroute()完成。</li>
  <li>再使用方法fib_table_insert()插入转发数据库(FIB)</li>
  <li>通知订阅了RTM_NEWROUTE消息的侦听(使用rtmsg_fib()方法)</li>
  <li>创建一条netlinki消息，通过rtnl_notify()发送，通知加入了RTNLGRP_IPV4_ROUTE组播组的所有侦听者</li>
</ul>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ip</span> <span class="n">route</span> <span class="n">add</span> <span class="o">-&gt;</span> <span class="n">rtnetlink_rcv</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">inet_rtm_newroute</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">fib_table_insert</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">rtmsg_fib</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">rtnl_notify</span><span class="p">()</span>
</code></pre></div></div>

<h4 id="ip-route-del-删除顺序">ip route del 删除顺序</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ip route del -&gt; rtnetlink_rcv() -&gt; inet_rtm_delroute() -&gt; fib_table_delete() -&gt; rtmsg_fib() -&gt; rtnl_notify()
</code></pre></div></div>

<h4 id="ip-monitor-route">ip monitor route</h4>

<p>通过Netlink，加入RTNLGRP_IPV4_ROUTE组播组。通过rtnl_notify()发送的消息会被ip monitor接收</p>

<h3 id="netlink-消息">netlink 消息</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0                                         31
        netlink消息报头(nlmsghdr)
        通用netlink消息报头(genlmsghdr)
        用户特定的消息报头(可选)
        通用netlink消息有效载荷(可选)
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// include/uapi/linux/genetlink.h</span>
<span class="k">struct</span> <span class="n">genlmsghdr</span> <span class="p">{</span>
    <span class="n">__u8</span> <span class="n">cmd</span><span class="p">;</span>                     <span class="c1">// 通用消息类型</span>
    <span class="n">__u8</span> <span class="n">version</span><span class="p">;</span>                 <span class="c1">// 版本控制</span>
    <span class="n">__u16</span> <span class="n">reserved</span><span class="p">;</span>               <span class="c1">// 保留</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sk_buff</span> <span class="o">*</span><span class="n">genlmsg_new</span><span class="p">(</span><span class="kt">size_t</span> <span class="n">payload</span><span class="p">,</span><span class="n">gfp_t</span> <span class="n">flags</span><span class="p">)</span>
</code></pre></div></div>

<p>实现了为netlink消息分配缓冲区，这个是nlmsg_new()的包装器</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>genlmsg_new（） -&gt; 调用genlmsg_put() 创建netlink报头 
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// include/net/genetlink.h</span>
<span class="n">genlmsg_unicast</span><span class="p">()</span> <span class="c1">// 单播 是nlmsg_unicast() 包装器</span>
<span class="n">genlmsg_multicast</span><span class="p">()</span> <span class="c1">// 发送消息到默认网络命名空间(namespace) net_init</span>
<span class="n">genlmsg_multicast_allns</span><span class="p">()</span>  <span class="c1">// 发送到所有网络命名空间(namespace)</span>
</code></pre></div></div>

<p>用户态创建netlink套接字</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>socket(AF_NETLINK,SOCK_RAM,NETLINK_GENERIC) -&gt; 内核 netlink_create()
</code></pre></div></div>

<h4 id="监视接口">监视接口</h4>

<p>http://yinyaliang.site/monitor-tcp-state/</p>]]></content><author><name>Your Name</name></author><category term="Linux" /><summary type="html"><![CDATA[netlink 简介]]></summary></entry><entry><title type="html">zabbix discovery use prometheus data</title><link href="/monitor-zabbix-metrics/" rel="alternate" type="text/html" title="zabbix discovery use prometheus data" /><published>2022-11-16T00:00:00+08:00</published><updated>2022-11-16T00:00:00+08:00</updated><id>/monitor-zabbix-metrics</id><content type="html" xml:base="/monitor-zabbix-metrics/"><![CDATA[<p>zabbix 使用prometheus数据格式实现自动发现</p>

<h4 id="数据格式">数据格式</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># HELP apisix_http_status HTTP status codes per service in APISIX
# TYPE apisix_http_status counter
apisix_http_status{code="200",route="ceshi-api",matched_uri="/*",matched_host="ceshi.camin.vip",service="ceshi-api",consumer="",node=""} 26489
apisix_http_status{code="200",route="ceshi-api",matched_uri="/*",matched_host="ceshi.camin.vip",service="ceshi-api",consumer="",node="10.1.9.3"} 624693
apisix_http_status{code="200",route="ceshi-api",matched_uri="/*",matched_host="ceshi.campre.dom",service="ceshi-api",consumer="",node="10.1.9.3"} 4820
apisix_http_status{code="200",route="ceshi.camin.vip",matched_uri="/*",matched_host="ceshi.camin.vip",service="ceshi-console",consumer="",node="10.1.9.1"} 8006
apisix_http_status{code="200",route="ceshi.camin.vip",matched_uri="/*",matched_host="ceshi.camin.vip",service="ceshi-console",consumer="",node="10.0.1.1"} 2376
</code></pre></div></div>

<h4 id="模板">模板</h4>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">zabbix_export</span><span class="pi">:</span>
  <span class="na">version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">6.0'</span>
  <span class="na">date</span><span class="pi">:</span> <span class="s1">'</span><span class="s">2022-11-16T06:43:50Z'</span>
  <span class="na">groups</span><span class="pi">:</span>
    <span class="pi">-</span>
      <span class="na">uuid</span><span class="pi">:</span> <span class="s">5875dc458fab45f699bdaf705773c951</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">模板/服务</span>
  <span class="na">templates</span><span class="pi">:</span>
    <span class="pi">-</span>
      <span class="na">uuid</span><span class="pi">:</span> <span class="s">70715d4c9a5744a0a0550c7131c107f5</span>
      <span class="na">template</span><span class="pi">:</span> <span class="s">service.apisix</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">service.apisix</span>
      <span class="na">groups</span><span class="pi">:</span>
        <span class="pi">-</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">模板/服务</span>
      <span class="na">items</span><span class="pi">:</span>
        <span class="pi">-</span>
          <span class="na">uuid</span><span class="pi">:</span> <span class="s">d265901f69d640889c4f2a84b4971ab8</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">apisix</span><span class="nv"> </span><span class="s">metrics'</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">HTTP_AGENT</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
          <span class="na">trends</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">value_type</span><span class="pi">:</span> <span class="s">TEXT</span>
          <span class="na">url</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{HOST.IP}:9091/apisix/prometheus/metrics'</span>
          <span class="na">tags</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">tag</span><span class="pi">:</span> <span class="s">Application</span>
              <span class="na">value</span><span class="pi">:</span> <span class="s">RAW</span>
      <span class="na">discovery_rules</span><span class="pi">:</span>
        <span class="pi">-</span>
          <span class="na">uuid</span><span class="pi">:</span> <span class="s">cda308711c9f4ef8aef2c3f74d3bb2a3</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">service</span><span class="nv"> </span><span class="s">apisix</span><span class="nv"> </span><span class="s">http</span><span class="nv"> </span><span class="s">code</span><span class="nv"> </span><span class="s">2xx'</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.httpcode.2xx</span>
          <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">item_prototypes</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">uuid</span><span class="pi">:</span> <span class="s">ff316b35fb62427492c1cf0ec435a401</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}{code={#CODE},route={#ROUTE},matched_uri={#MATCHED_URI},matched_host={#MATCHED_HOST},service={#SERVICE},consumer={#CONSUMER},node={#NODE}}'</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
              <span class="na">key</span><span class="pi">:</span> <span class="s1">'</span><span class="s">apisix.httpcode.2xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}]'</span>
              <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
              <span class="na">description</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
              <span class="na">preprocessing</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_PATTERN</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
                    <span class="pi">-</span> <span class="s">value</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">SIMPLE_CHANGE</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
              <span class="na">master_item</span><span class="pi">:</span>
                <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
              <span class="na">tags</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">tag</span><span class="pi">:</span> <span class="s">Application</span>
                  <span class="na">value</span><span class="pi">:</span> <span class="s">APISIX-2XX</span>
          <span class="na">master_item</span><span class="pi">:</span>
            <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
          <span class="na">lld_macro_paths</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">code'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CONSUMER}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">consumer'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#HELP}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.help</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_HOST}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_host'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_URI}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_uri'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.name</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">node'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">route'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#SERVICE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">service'</span><span class="s1">'</span><span class="s">]'</span>
          <span class="na">preprocessing</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_TO_JSON</span>
              <span class="na">parameters</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code=~"2.*"}'</span>
        <span class="pi">-</span>
          <span class="na">uuid</span><span class="pi">:</span> <span class="s">6a079ccfcf1e4df188515f0951c6f5e1</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">service</span><span class="nv"> </span><span class="s">apisix</span><span class="nv"> </span><span class="s">http</span><span class="nv"> </span><span class="s">code</span><span class="nv"> </span><span class="s">3xx'</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.httpcode.3xx</span>
          <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">item_prototypes</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">uuid</span><span class="pi">:</span> <span class="s">e2a5955d8e2746a7a45d7ff27f3feb13</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}{code={#CODE},route={#ROUTE},matched_uri={#MATCHED_URI},matched_host={#MATCHED_HOST},service={#SERVICE},consumer={#CONSUMER},node={#NODE}}'</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
              <span class="na">key</span><span class="pi">:</span> <span class="s1">'</span><span class="s">apisix.httpcode.3xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}]'</span>
              <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
              <span class="na">description</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
              <span class="na">preprocessing</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_PATTERN</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
                    <span class="pi">-</span> <span class="s">value</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">SIMPLE_CHANGE</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
              <span class="na">master_item</span><span class="pi">:</span>
                <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
              <span class="na">tags</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">tag</span><span class="pi">:</span> <span class="s">Application</span>
                  <span class="na">value</span><span class="pi">:</span> <span class="s">APISIX-3XX</span>
          <span class="na">master_item</span><span class="pi">:</span>
            <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
          <span class="na">lld_macro_paths</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">code'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CONSUMER}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">consumer'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#HELP}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.help</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_HOST}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_host'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_URI}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_uri'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.name</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">node'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">route'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#SERVICE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">service'</span><span class="s1">'</span><span class="s">]'</span>
          <span class="na">preprocessing</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_TO_JSON</span>
              <span class="na">parameters</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code=~"3.*"}'</span>
        <span class="pi">-</span>
          <span class="na">uuid</span><span class="pi">:</span> <span class="s">f5e8b61f49a14bb79a96c911145a73e8</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">service</span><span class="nv"> </span><span class="s">apisix</span><span class="nv"> </span><span class="s">http</span><span class="nv"> </span><span class="s">code</span><span class="nv"> </span><span class="s">4xx'</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.httpcode.4xx</span>
          <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">item_prototypes</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">uuid</span><span class="pi">:</span> <span class="s">c2a0c5e646cd420e95124f558a80fb86</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}{code={#CODE},route={#ROUTE},matched_uri={#MATCHED_URI},matched_host={#MATCHED_HOST},service={#SERVICE},consumer={#CONSUMER},node={#NODE}}'</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
              <span class="na">key</span><span class="pi">:</span> <span class="s1">'</span><span class="s">apisix.httpcode.4xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}]'</span>
              <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
              <span class="na">description</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
              <span class="na">preprocessing</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_PATTERN</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
                    <span class="pi">-</span> <span class="s">value</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">SIMPLE_CHANGE</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
              <span class="na">master_item</span><span class="pi">:</span>
                <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
              <span class="na">tags</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">tag</span><span class="pi">:</span> <span class="s">Application</span>
                  <span class="na">value</span><span class="pi">:</span> <span class="s">APISIX-4XX</span>
              <span class="na">trigger_prototypes</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">uuid</span><span class="pi">:</span> <span class="s">859ab9da74524cfaa20be1b0fd37e06f</span>
                  <span class="na">expression</span><span class="pi">:</span> <span class="s1">'</span><span class="s">last(/service.apisix/apisix.httpcode.4xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}])&gt;0'</span>
                  <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}</span><span class="nv"> </span><span class="s">{#NODE}</span><span class="nv"> </span><span class="s">{#CODE}</span><span class="nv"> </span><span class="s">over</span><span class="nv"> </span><span class="s">0'</span>
                  <span class="na">priority</span><span class="pi">:</span> <span class="s">WARNING</span>
          <span class="na">master_item</span><span class="pi">:</span>
            <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
          <span class="na">lld_macro_paths</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">code'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CONSUMER}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">consumer'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#HELP}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.help</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_HOST}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_host'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_URI}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_uri'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.name</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">node'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">route'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#SERVICE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">service'</span><span class="s1">'</span><span class="s">]'</span>
          <span class="na">preprocessing</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_TO_JSON</span>
              <span class="na">parameters</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code=~"4.*"}'</span>
        <span class="pi">-</span>
          <span class="na">uuid</span><span class="pi">:</span> <span class="s">ee04b62140fd470badfd521e22127e52</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">service</span><span class="nv"> </span><span class="s">apisix</span><span class="nv"> </span><span class="s">http</span><span class="nv"> </span><span class="s">code</span><span class="nv"> </span><span class="s">5xx'</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.httpcode.5xx</span>
          <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">item_prototypes</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">uuid</span><span class="pi">:</span> <span class="s">ba0685038fd84ab5ae87fbe15b2d683f</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}{code={#CODE},route={#ROUTE},matched_uri={#MATCHED_URI},matched_host={#MATCHED_HOST},service={#SERVICE},consumer={#CONSUMER},node={#NODE}}'</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
              <span class="na">key</span><span class="pi">:</span> <span class="s1">'</span><span class="s">apisix.httpcode.5xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}]'</span>
              <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
              <span class="na">description</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
              <span class="na">preprocessing</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_PATTERN</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
                    <span class="pi">-</span> <span class="s">value</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">SIMPLE_CHANGE</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
              <span class="na">master_item</span><span class="pi">:</span>
                <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
              <span class="na">tags</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">tag</span><span class="pi">:</span> <span class="s">Application</span>
                  <span class="na">value</span><span class="pi">:</span> <span class="s">APISIX-5XX</span>
              <span class="na">trigger_prototypes</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">uuid</span><span class="pi">:</span> <span class="s">263014e968b34f17b21eb4926359c83c</span>
                  <span class="na">expression</span><span class="pi">:</span> <span class="s1">'</span><span class="s">last(/service.apisix/apisix.httpcode.5xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}])&gt;0'</span>
                  <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}</span><span class="nv"> </span><span class="s">{#NODE}</span><span class="nv"> </span><span class="s">{#CODE}</span><span class="nv"> </span><span class="s">over</span><span class="nv"> </span><span class="s">0'</span>
                  <span class="na">priority</span><span class="pi">:</span> <span class="s">WARNING</span>
          <span class="na">master_item</span><span class="pi">:</span>
            <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
          <span class="na">lld_macro_paths</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">code'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CONSUMER}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">consumer'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#HELP}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.help</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_HOST}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_host'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_URI}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_uri'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.name</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">node'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">route'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#SERVICE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">service'</span><span class="s1">'</span><span class="s">]'</span>
          <span class="na">preprocessing</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_TO_JSON</span>
              <span class="na">parameters</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code=~"5.*"}'</span>
</code></pre></div></div>

<h4 id="效果">效果</h4>
<p><img src="/assets/images/zabbix/zabbix-metrics.png" /></p>]]></content><author><name>Your Name</name></author><category term="Monitor" /><summary type="html"><![CDATA[zabbix 使用prometheus数据格式实现自动发现]]></summary></entry><entry><title type="html">获取tcp状态</title><link href="/c-02/" rel="alternate" type="text/html" title="获取tcp状态" /><published>2022-11-09T00:00:00+08:00</published><updated>2022-11-09T00:00:00+08:00</updated><id>/c-02</id><content type="html" xml:base="/c-02/"><![CDATA[<p>通过module方式 替换zabbix通过ss命令获取tcp状态</p>

<h4 id="老的方式">老的方式</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/python
</span><span class="kn">import</span> <span class="nn">os</span><span class="p">,</span><span class="n">sys</span>
<span class="kn">from</span> <span class="nn">operator</span> <span class="kn">import</span> <span class="n">itemgetter</span>

<span class="n">Base_Dir</span> <span class="o">=</span> <span class="s">'/data/scripts/oss/zabbix/'</span>
<span class="n">sys</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">Base_Dir</span><span class="p">)</span>

<span class="kn">from</span> <span class="nn">eeo_zabbix</span> <span class="kn">import</span> <span class="n">trapper_zabbix</span>

<span class="k">class</span> <span class="nc">tcp_state</span><span class="p">(</span><span class="nb">dict</span><span class="p">):</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">command</span><span class="p">())</span>

    <span class="k">def</span> <span class="nf">command</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">com</span> <span class="ow">in</span> <span class="n">os</span><span class="p">.</span><span class="n">popen</span><span class="p">(</span><span class="s">"/usr/sbin/ss -ant"</span><span class="p">):</span>
            <span class="k">yield</span> <span class="n">com</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">' '</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>

    <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">iterable</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="o">**</span><span class="n">kwds</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">iterable</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">iterable</span><span class="p">,</span> <span class="s">'items'</span><span class="p">):</span>
                <span class="k">if</span> <span class="bp">self</span><span class="p">:</span>
                    <span class="n">self_get</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get</span>
                    <span class="k">for</span> <span class="n">elem</span><span class="p">,</span> <span class="n">count</span> <span class="ow">in</span> <span class="n">iterable</span><span class="p">.</span><span class="n">iteritems</span><span class="p">():</span>
                        <span class="bp">self</span><span class="p">[</span><span class="n">elem</span><span class="p">]</span> <span class="o">=</span> <span class="n">self_get</span><span class="p">(</span><span class="n">elem</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="n">count</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="nb">dict</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">iterable</span><span class="p">)</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">self_get</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get</span>
                <span class="k">for</span> <span class="n">elem</span> <span class="ow">in</span> <span class="n">iterable</span><span class="p">:</span>
                    <span class="bp">self</span><span class="p">[</span><span class="n">elem</span><span class="p">]</span> <span class="o">=</span> <span class="n">self_get</span><span class="p">(</span><span class="n">elem</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="k">if</span> <span class="n">kwds</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">kwds</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
       <span class="k">return</span> <span class="s">','</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="s">'%r:%r'</span><span class="p">.</span><span class="n">__mod__</span><span class="p">,</span><span class="bp">self</span><span class="p">.</span><span class="n">iteritems</span><span class="p">()))</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">results</span> <span class="o">=</span> <span class="n">tcp_state</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">results</span><span class="p">.</span><span class="n">iteritems</span><span class="p">():</span>
        <span class="n">trapper_zabbix</span><span class="p">(</span><span class="s">'tcp.{0}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</code></pre></div></div>

<h4 id="新的方式">新的方式</h4>
<h5 id="优点">优点</h5>
<p>不需要配置文件、不需要部署脚本、模板挂载即可用,下面为demo代码</p>

<h5 id="tcp_countc">tcp_count.c</h5>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">"tcp_count.h"</span><span class="cp">
</span><span class="c1">// TCP状态 参考:https://users.cs.northwestern.edu/~agupta/cs340/project2/TCPIP_State_Transition_Diagram.pdf</span>
<span class="k">static</span> <span class="kt">char</span> <span class="o">*</span><span class="n">tcp_state_array</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"ESTABLISHED"</span><span class="p">,</span>
    <span class="s">"SYN-SENT"</span><span class="p">,</span>
    <span class="s">"SYN-RECEIVED"</span><span class="p">,</span>
    <span class="s">"FIN-WAIT-1"</span><span class="p">,</span>
    <span class="s">"FIN-WAIT-2"</span><span class="p">,</span>
    <span class="s">"TIME-WAIT"</span><span class="p">,</span>
    <span class="s">"CLOSING"</span><span class="p">,</span>
    <span class="s">"CLOSE-WAIT"</span><span class="p">,</span>
    <span class="s">"LAST-ACK"</span><span class="p">,</span>
    <span class="s">"LISTEN"</span><span class="p">,</span>
    <span class="s">"CLOSED"</span>
    <span class="p">};</span>

<span class="k">enum</span>
<span class="p">{</span>
    <span class="n">TCP_ESTABLISHED</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
    <span class="n">TCP_SYN_SENT</span><span class="p">,</span>
    <span class="n">TCP_SYN_RECV</span><span class="p">,</span>
    <span class="n">TCP_FIN_WAIT1</span><span class="p">,</span>
    <span class="n">TCP_FIN_WAIT2</span><span class="p">,</span>
    <span class="n">TCP_TIME_WAIT</span><span class="p">,</span>
    <span class="n">TCP_CLOSE</span><span class="p">,</span>
    <span class="n">TCP_CLOSE_WAIT</span><span class="p">,</span>
    <span class="n">TCP_LAST_ACK</span><span class="p">,</span>
    <span class="n">TCP_LISTEN</span><span class="p">,</span>
    <span class="n">TCP_CLOSING</span>
<span class="p">};</span>

<span class="k">static</span> <span class="kt">int</span> <span class="nf">param_in_tcp_state</span><span class="p">(</span><span class="kt">char</span> <span class="o">**</span><span class="n">haystack</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">needle</span><span class="p">,</span> <span class="kt">int</span> <span class="n">haylen</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">haylen</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="o">*</span><span class="p">(</span><span class="n">haystack</span> <span class="o">+</span> <span class="n">i</span><span class="p">),</span> <span class="n">needle</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">recv_and_count</span><span class="p">(</span><span class="kt">int</span> <span class="n">fd</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">counter</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">count_state</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="kt">int</span> <span class="n">recv_status</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">sockaddr_nl</span> <span class="n">nladdr</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">iovec</span> <span class="n">iov</span><span class="p">;</span> <span class="c1">// 定义数据缓冲区格式</span>
    <span class="k">struct</span> <span class="n">msghdr</span> <span class="n">rcv_msg</span><span class="p">;</span>
    <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">32768</span><span class="p">];</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">msglen</span><span class="p">;</span>

    <span class="k">struct</span> <span class="n">nlmsghdr</span> <span class="o">*</span><span class="n">h</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">inet_diag_msg</span> <span class="o">*</span><span class="n">r</span><span class="p">;</span>

    <span class="n">memset</span><span class="p">(</span><span class="o">&amp;</span><span class="n">nladdr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">nladdr</span><span class="p">));</span>
    <span class="n">nladdr</span><span class="p">.</span><span class="n">nl_family</span> <span class="o">=</span> <span class="n">AF_NETLINK</span><span class="p">;</span>

    <span class="n">iov</span><span class="p">.</span><span class="n">iov_base</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">buf</span><span class="p">;</span>
    <span class="n">iov</span><span class="p">.</span><span class="n">iov_len</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">);</span>

    <span class="n">rcv_msg</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">msghdr</span><span class="p">){</span>
        <span class="p">.</span><span class="n">msg_name</span> <span class="o">=</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">nladdr</span><span class="p">,</span>
        <span class="p">.</span><span class="n">msg_namelen</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">nladdr</span><span class="p">),</span>
        <span class="p">.</span><span class="n">msg_iov</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">iov</span><span class="p">,</span>
        <span class="p">.</span><span class="n">msg_iovlen</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
    <span class="p">};</span>

    <span class="kt">int</span> <span class="n">found_done</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">found_done</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">)</span>
    <span class="p">{</span>

        <span class="n">recv_status</span> <span class="o">=</span> <span class="n">recvmsg</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">rcv_msg</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">recv_status</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">msglen</span> <span class="o">=</span> <span class="n">recv_status</span><span class="p">;</span>
        <span class="n">h</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">nlmsghdr</span> <span class="o">*</span><span class="p">)</span><span class="n">buf</span><span class="p">;</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">NLMSG_OK</span><span class="p">(</span><span class="n">h</span><span class="p">,</span> <span class="n">msglen</span><span class="p">))</span> <span class="c1">// 判断buf中的数据是否读取完毕</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">h</span><span class="o">-&gt;</span><span class="n">nlmsg_seq</span> <span class="o">!=</span> <span class="mi">860902</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">found_done</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">h</span><span class="o">-&gt;</span><span class="n">nlmsg_type</span> <span class="o">==</span> <span class="n">NLMSG_DONE</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">found_done</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="n">r</span> <span class="o">=</span> <span class="n">NLMSG_DATA</span><span class="p">(</span><span class="n">h</span><span class="p">);</span> <span class="c1">// 取当前netlink消息头结构紧邻的inet_diag_msg结构</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">counter</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">counter</span><span class="p">[</span><span class="n">r</span><span class="o">-&gt;</span><span class="n">idiag_state</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="n">count_state</span><span class="o">++</span><span class="p">;</span>

            <span class="n">h</span> <span class="o">=</span> <span class="n">NLMSG_NEXT</span><span class="p">(</span><span class="n">h</span><span class="p">,</span> <span class="n">msglen</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">count_state</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">send_msg_request</span><span class="p">(</span><span class="kt">int</span> <span class="n">fd</span><span class="p">,</span> <span class="kt">int</span> <span class="n">port_state</span><span class="p">)</span>
<span class="p">{</span>

    <span class="k">struct</span> <span class="n">sockaddr_nl</span> <span class="n">nladdr</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">msghdr</span> <span class="n">msg</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">iovec</span> <span class="n">iov</span><span class="p">;</span>

    <span class="c1">// 初始化请求的数据</span>
    <span class="k">struct</span> <span class="n">send_msg</span>
    <span class="p">{</span>
        <span class="k">struct</span> <span class="n">nlmsghdr</span> <span class="n">nlh</span><span class="p">;</span>                                            <span class="c1">// request header</span>
        <span class="k">struct</span> <span class="n">inet_diag_req</span> <span class="n">r</span><span class="p">;</span>
    <span class="p">}</span> <span class="n">send_msg</span><span class="p">;</span>

    <span class="n">memset</span><span class="p">(</span><span class="o">&amp;</span><span class="n">nladdr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">nladdr</span><span class="p">));</span>
    <span class="n">memset</span><span class="p">(</span><span class="o">&amp;</span><span class="n">send_msg</span><span class="p">.</span><span class="n">r</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">send_msg</span><span class="p">.</span><span class="n">r</span><span class="p">));</span>

    <span class="n">send_msg</span><span class="p">.</span><span class="n">nlh</span><span class="p">.</span><span class="n">nlmsg_len</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">send_msg</span><span class="p">);</span>                             <span class="c1">// 32位消息的长度，以字节为单位，包括消息头</span>
    <span class="n">send_msg</span><span class="p">.</span><span class="n">nlh</span><span class="p">.</span><span class="n">nlmsg_type</span> <span class="o">=</span> <span class="n">TCPDIAG_GETSOCK</span><span class="p">;</span>                             <span class="c1">// 消息的类型</span>
    <span class="n">send_msg</span><span class="p">.</span><span class="n">nlh</span><span class="p">.</span><span class="n">nlmsg_flags</span> <span class="o">=</span> <span class="n">NLM_F_ROOT</span> <span class="o">|</span> <span class="n">NLM_F_MATCH</span> <span class="o">|</span> <span class="n">NLM_F_REQUEST</span><span class="p">;</span>   <span class="c1">// 附加标志</span>
    <span class="n">send_msg</span><span class="p">.</span><span class="n">nlh</span><span class="p">.</span><span class="n">nlmsg_seq</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>                                            <span class="c1">// 消息序号 </span>
    <span class="n">send_msg</span><span class="p">.</span><span class="n">nlh</span><span class="p">.</span><span class="n">nlmsg_pid</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>                                            <span class="c1">// 标识</span>

    <span class="n">send_msg</span><span class="p">.</span><span class="n">r</span><span class="p">.</span><span class="n">idiag_states</span> <span class="o">=</span> <span class="n">port_state</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">?</span> <span class="mh">0xffff</span> <span class="o">:</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">port_state</span><span class="p">);</span> <span class="c1">// idiag_states字段的每一位表示一个状态，因此通过位偏移可以将具体某个状态位置1</span>

    <span class="n">nladdr</span><span class="p">.</span><span class="n">nl_family</span> <span class="o">=</span> <span class="n">AF_NETLINK</span><span class="p">;</span> <span class="c1">// 总是为AF_NETLINK</span>

    <span class="n">iov</span><span class="p">.</span><span class="n">iov_base</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">send_msg</span><span class="p">;</span>
    <span class="n">iov</span><span class="p">.</span><span class="n">iov_len</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">send_msg</span><span class="p">);</span>

    <span class="n">msg</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">msghdr</span><span class="p">){</span>
        <span class="c1">//使用sendmsg()发送数据，必须使用msghdr结构</span>
        <span class="p">.</span><span class="n">msg_name</span> <span class="o">=</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">nladdr</span><span class="p">,</span>
        <span class="p">.</span><span class="n">msg_namelen</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">nladdr</span><span class="p">),</span>
        <span class="p">.</span><span class="n">msg_iov</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">iov</span><span class="p">,</span>
        <span class="p">.</span><span class="n">msg_iovlen</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
    <span class="p">};</span>

    <span class="k">return</span> <span class="n">sendmsg</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">msg</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// 通过sendmsg函数发送消息到内核中</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">tcp_state_count</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">ret_count</span><span class="p">,</span> <span class="kt">int</span> <span class="n">state</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">count</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">socket_fd</span><span class="p">;</span>
    <span class="n">socket_fd</span> <span class="o">=</span> <span class="n">socket</span><span class="p">(</span><span class="n">AF_NETLINK</span><span class="p">,</span> <span class="n">SOCK_RAW</span><span class="p">,</span> <span class="n">NETLINK_SOCK_DIAG</span><span class="p">);</span> <span class="c1">// AF_NETLINK IPv4   SOCK_RAW 原始套接字 NETLINK_SOCK_DIAG 自内核查询协议信息  返回值：-1表示失败</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">socket_fd</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>                                           <span class="c1">// create failed</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">SYSINFO_RET_FAIL</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">&gt;</span> <span class="n">send_msg_request</span><span class="p">(</span><span class="n">socket_fd</span><span class="p">,</span> <span class="n">state</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">close</span><span class="p">(</span><span class="n">socket_fd</span><span class="p">);</span>
        <span class="k">return</span> <span class="n">SYSINFO_RET_FAIL</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="o">*</span><span class="n">ret_count</span> <span class="o">=</span> <span class="n">recv_and_count</span><span class="p">(</span><span class="n">socket_fd</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>

    <span class="n">close</span><span class="p">(</span><span class="n">socket_fd</span><span class="p">);</span>

    <span class="k">return</span> <span class="n">SYSINFO_RET_OK</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">tcp_state</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">state</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">result</span><span class="p">)</span>
<span class="p">{</span>

    <span class="kt">int</span> <span class="n">port_state</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="n">SYSINFO_RET_FAIL</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">param_in_tcp_state</span><span class="p">(</span><span class="n">tcp_state_array</span><span class="p">,</span> <span class="n">state</span><span class="p">,</span> <span class="n">TCP_STATE_COUNT</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">SYSINFO_RET_FAIL</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="s">"ESTABLISHED"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">port_state</span> <span class="o">=</span> <span class="n">TCP_ESTABLISHED</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="s">"SYN-SENT"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">port_state</span> <span class="o">=</span> <span class="n">TCP_SYN_SENT</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="s">"SYN-RECEIVED"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">port_state</span> <span class="o">=</span> <span class="n">TCP_SYN_RECV</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="s">"FIN-WAIT-1"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">port_state</span> <span class="o">=</span> <span class="n">TCP_FIN_WAIT1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="s">"FIN-WAIT-2"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">port_state</span> <span class="o">=</span> <span class="n">TCP_FIN_WAIT2</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="s">"TIME-WAIT"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">port_state</span> <span class="o">=</span> <span class="n">TCP_TIME_WAIT</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="s">"CLOSED"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">port_state</span> <span class="o">=</span> <span class="n">TCP_CLOSE</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="s">"CLOSE-WAIT"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">port_state</span> <span class="o">=</span> <span class="n">TCP_CLOSE_WAIT</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="s">"LAST-ACK"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">port_state</span> <span class="o">=</span> <span class="n">TCP_LAST_ACK</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="s">"LISTEN"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">port_state</span> <span class="o">=</span> <span class="n">TCP_LISTEN</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="s">"CLOSING"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">port_state</span> <span class="o">=</span> <span class="n">TCP_CLOSING</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">ret</span> <span class="o">=</span> <span class="n">tcp_state_count</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="n">port_state</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">ret</span> <span class="o">==</span> <span class="n">SYSINFO_RET_FAIL</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">SYSINFO_RET_FAIL</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">SYSINFO_RET_OK</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="kt">int</span> <span class="n">a</span><span class="p">;</span>
    <span class="n">tcp_state</span><span class="p">(</span><span class="s">"LISTEN"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span><span class="n">a</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h5 id="tcp_counth">tcp_count.h</h5>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;linux/netlink.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;sys/socket.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;linux/inet_diag.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;unistd.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span>
<span class="cp">#define SYSINFO_RET_OK		0
#define SYSINFO_RET_FAIL	1
#define TCP_STATE_COUNT 11
#define NULL ((void *)0)
</span></code></pre></div></div>

<h4 id="验证">验证</h4>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">yin</span><span class="err">@</span><span class="n">ding</span><span class="o">:/</span><span class="n">home</span><span class="o">/</span><span class="n">c</span><span class="o">/</span><span class="n">netlink</span><span class="err">$</span> <span class="p">.</span><span class="o">/</span><span class="n">a</span><span class="p">.</span><span class="n">out</span> 
<span class="mi">23</span>
<span class="n">yin</span><span class="err">@</span><span class="n">ding</span><span class="o">:/</span><span class="n">home</span><span class="o">/</span><span class="n">c</span><span class="o">/</span><span class="n">netlink</span><span class="err">$</span> <span class="n">ss</span> <span class="o">-</span><span class="n">ant</span> <span class="o">|</span> <span class="n">grep</span> <span class="n">LISTEN</span> <span class="o">|</span> <span class="n">wc</span> <span class="o">-</span><span class="n">l</span>
<span class="mi">23</span>
</code></pre></div></div>

<h4 id="参考">参考</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://www.rfc-editor.org/rfc/rfc3549.html
https://github.com/xgfone/snippet/blob/master/snippet/docs/linux/netlink/netlink-note.md#netlink-%E6%B6%88%E6%81%AF%E7%BB%93%E6%9E%84
</code></pre></div></div>]]></content><author><name>Your Name</name></author><category term="Linux" /><summary type="html"><![CDATA[通过module方式 替换zabbix通过ss命令获取tcp状态]]></summary></entry><entry><title type="html">zabbix discovery use prometheus data</title><link href="/monitor-zabbix-metrics/" rel="alternate" type="text/html" title="zabbix discovery use prometheus data" /><published>2022-11-06T00:00:00+08:00</published><updated>2022-11-06T00:00:00+08:00</updated><id>/monitor-zabbix-metrics</id><content type="html" xml:base="/monitor-zabbix-metrics/"><![CDATA[<p>zabbix 使用prometheus数据格式实现自动发现</p>

<h4 id="数据格式">数据格式</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># HELP apisix_http_status HTTP status codes per service in APISIX
# TYPE apisix_http_status counter
apisix_http_status{code="200",route="ceshi-api",matched_uri="/*",matched_host="ceshi.camin.vip",service="ceshi-api",consumer="",node=""} 26489
apisix_http_status{code="200",route="ceshi-api",matched_uri="/*",matched_host="ceshi.camin.vip",service="ceshi-api",consumer="",node="10.1.9.3"} 624693
apisix_http_status{code="200",route="ceshi-api",matched_uri="/*",matched_host="ceshi.campre.dom",service="ceshi-api",consumer="",node="10.1.9.3"} 4820
apisix_http_status{code="200",route="ceshi.camin.vip",matched_uri="/*",matched_host="ceshi.camin.vip",service="ceshi-console",consumer="",node="10.1.9.1"} 8006
apisix_http_status{code="200",route="ceshi.camin.vip",matched_uri="/*",matched_host="ceshi.camin.vip",service="ceshi-console",consumer="",node="10.0.1.1"} 2376
</code></pre></div></div>

<h4 id="模板">模板</h4>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">zabbix_export</span><span class="pi">:</span>
  <span class="na">version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">6.0'</span>
  <span class="na">date</span><span class="pi">:</span> <span class="s1">'</span><span class="s">2022-11-16T07:13:33Z'</span>
  <span class="na">groups</span><span class="pi">:</span>
    <span class="pi">-</span>
      <span class="na">uuid</span><span class="pi">:</span> <span class="s">5875dc458fab45f699bdaf705773c951</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">模板/服务</span>
  <span class="na">templates</span><span class="pi">:</span>
    <span class="pi">-</span>
      <span class="na">uuid</span><span class="pi">:</span> <span class="s">70715d4c9a5744a0a0550c7131c107f5</span>
      <span class="na">template</span><span class="pi">:</span> <span class="s">service.apisix</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">service.apisix</span>
      <span class="na">groups</span><span class="pi">:</span>
        <span class="pi">-</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">模板/服务</span>
      <span class="na">items</span><span class="pi">:</span>
        <span class="pi">-</span>
          <span class="na">uuid</span><span class="pi">:</span> <span class="s">d265901f69d640889c4f2a84b4971ab8</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">apisix</span><span class="nv"> </span><span class="s">metrics'</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">HTTP_AGENT</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
          <span class="na">trends</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">value_type</span><span class="pi">:</span> <span class="s">TEXT</span>
          <span class="na">url</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{HOST.IP}:9091/apisix/prometheus/metrics'</span>
          <span class="na">tags</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">tag</span><span class="pi">:</span> <span class="s">Application</span>
              <span class="na">value</span><span class="pi">:</span> <span class="s">RAW</span>
      <span class="na">discovery_rules</span><span class="pi">:</span>
        <span class="pi">-</span>
          <span class="na">uuid</span><span class="pi">:</span> <span class="s">cda308711c9f4ef8aef2c3f74d3bb2a3</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">service</span><span class="nv"> </span><span class="s">apisix</span><span class="nv"> </span><span class="s">http</span><span class="nv"> </span><span class="s">code</span><span class="nv"> </span><span class="s">2xx'</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.httpcode.2xx</span>
          <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">lifetime</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">item_prototypes</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">uuid</span><span class="pi">:</span> <span class="s">ff316b35fb62427492c1cf0ec435a401</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}{code={#CODE},route={#ROUTE},matched_uri={#MATCHED_URI},matched_host={#MATCHED_HOST},service={#SERVICE},consumer={#CONSUMER},node={#NODE}}'</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
              <span class="na">key</span><span class="pi">:</span> <span class="s1">'</span><span class="s">apisix.httpcode.2xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}]'</span>
              <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
              <span class="na">description</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
              <span class="na">preprocessing</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_PATTERN</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
                    <span class="pi">-</span> <span class="s">value</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">SIMPLE_CHANGE</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
              <span class="na">master_item</span><span class="pi">:</span>
                <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
              <span class="na">tags</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">tag</span><span class="pi">:</span> <span class="s">Application</span>
                  <span class="na">value</span><span class="pi">:</span> <span class="s">APISIX-2XX</span>
          <span class="na">master_item</span><span class="pi">:</span>
            <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
          <span class="na">lld_macro_paths</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">code'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CONSUMER}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">consumer'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#HELP}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.help</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_HOST}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_host'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_URI}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_uri'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.name</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">node'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">route'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#SERVICE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">service'</span><span class="s1">'</span><span class="s">]'</span>
          <span class="na">preprocessing</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_TO_JSON</span>
              <span class="na">parameters</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code=~"2.."}'</span>
        <span class="pi">-</span>
          <span class="na">uuid</span><span class="pi">:</span> <span class="s">6a079ccfcf1e4df188515f0951c6f5e1</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">service</span><span class="nv"> </span><span class="s">apisix</span><span class="nv"> </span><span class="s">http</span><span class="nv"> </span><span class="s">code</span><span class="nv"> </span><span class="s">3xx'</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.httpcode.3xx</span>
          <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">lifetime</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">item_prototypes</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">uuid</span><span class="pi">:</span> <span class="s">e2a5955d8e2746a7a45d7ff27f3feb13</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}{code={#CODE},route={#ROUTE},matched_uri={#MATCHED_URI},matched_host={#MATCHED_HOST},service={#SERVICE},consumer={#CONSUMER},node={#NODE}}'</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
              <span class="na">key</span><span class="pi">:</span> <span class="s1">'</span><span class="s">apisix.httpcode.3xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}]'</span>
              <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
              <span class="na">description</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
              <span class="na">preprocessing</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_PATTERN</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
                    <span class="pi">-</span> <span class="s">value</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">SIMPLE_CHANGE</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
              <span class="na">master_item</span><span class="pi">:</span>
                <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
              <span class="na">tags</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">tag</span><span class="pi">:</span> <span class="s">Application</span>
                  <span class="na">value</span><span class="pi">:</span> <span class="s">APISIX-3XX</span>
          <span class="na">master_item</span><span class="pi">:</span>
            <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
          <span class="na">lld_macro_paths</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">code'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CONSUMER}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">consumer'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#HELP}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.help</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_HOST}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_host'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_URI}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_uri'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.name</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">node'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">route'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#SERVICE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">service'</span><span class="s1">'</span><span class="s">]'</span>
          <span class="na">preprocessing</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_TO_JSON</span>
              <span class="na">parameters</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code=~"3.."}'</span>
        <span class="pi">-</span>
          <span class="na">uuid</span><span class="pi">:</span> <span class="s">f5e8b61f49a14bb79a96c911145a73e8</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">service</span><span class="nv"> </span><span class="s">apisix</span><span class="nv"> </span><span class="s">http</span><span class="nv"> </span><span class="s">code</span><span class="nv"> </span><span class="s">4xx'</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.httpcode.4xx</span>
          <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">lifetime</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">item_prototypes</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">uuid</span><span class="pi">:</span> <span class="s">c2a0c5e646cd420e95124f558a80fb86</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}{code={#CODE},route={#ROUTE},matched_uri={#MATCHED_URI},matched_host={#MATCHED_HOST},service={#SERVICE},consumer={#CONSUMER},node={#NODE}}'</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
              <span class="na">key</span><span class="pi">:</span> <span class="s1">'</span><span class="s">apisix.httpcode.4xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}]'</span>
              <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
              <span class="na">description</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
              <span class="na">preprocessing</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_PATTERN</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
                    <span class="pi">-</span> <span class="s">value</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">SIMPLE_CHANGE</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
              <span class="na">master_item</span><span class="pi">:</span>
                <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
              <span class="na">tags</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">tag</span><span class="pi">:</span> <span class="s">Application</span>
                  <span class="na">value</span><span class="pi">:</span> <span class="s">APISIX-4XX</span>
              <span class="na">trigger_prototypes</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">uuid</span><span class="pi">:</span> <span class="s">859ab9da74524cfaa20be1b0fd37e06f</span>
                  <span class="na">expression</span><span class="pi">:</span> <span class="s1">'</span><span class="s">last(/service.apisix/apisix.httpcode.4xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}])&gt;0'</span>
                  <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}</span><span class="nv"> </span><span class="s">{#NODE}</span><span class="nv"> </span><span class="s">{#CODE}</span><span class="nv"> </span><span class="s">over</span><span class="nv"> </span><span class="s">0'</span>
                  <span class="na">priority</span><span class="pi">:</span> <span class="s">WARNING</span>
          <span class="na">master_item</span><span class="pi">:</span>
            <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
          <span class="na">lld_macro_paths</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">code'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CONSUMER}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">consumer'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#HELP}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.help</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_HOST}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_host'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_URI}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_uri'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.name</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">node'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">route'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#SERVICE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">service'</span><span class="s1">'</span><span class="s">]'</span>
          <span class="na">preprocessing</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_TO_JSON</span>
              <span class="na">parameters</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code=~"4.."}'</span>
        <span class="pi">-</span>
          <span class="na">uuid</span><span class="pi">:</span> <span class="s">ee04b62140fd470badfd521e22127e52</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">service</span><span class="nv"> </span><span class="s">apisix</span><span class="nv"> </span><span class="s">http</span><span class="nv"> </span><span class="s">code</span><span class="nv"> </span><span class="s">5xx'</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.httpcode.5xx</span>
          <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">lifetime</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
          <span class="na">item_prototypes</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">uuid</span><span class="pi">:</span> <span class="s">ba0685038fd84ab5ae87fbe15b2d683f</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}{code={#CODE},route={#ROUTE},matched_uri={#MATCHED_URI},matched_host={#MATCHED_HOST},service={#SERVICE},consumer={#CONSUMER},node={#NODE}}'</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">DEPENDENT</span>
              <span class="na">key</span><span class="pi">:</span> <span class="s1">'</span><span class="s">apisix.httpcode.5xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}]'</span>
              <span class="na">delay</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0'</span>
              <span class="na">description</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
              <span class="na">preprocessing</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_PATTERN</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code="{#CODE}",route="{#ROUTE}",matched_uri="{#MATCHED_URI}",matched_host="{#MATCHED_HOST}",service="{#SERVICE}",consumer="{#CONSUMER}",node="{#NODE}"}'</span>
                    <span class="pi">-</span> <span class="s">value</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
                <span class="pi">-</span>
                  <span class="na">type</span><span class="pi">:</span> <span class="s">SIMPLE_CHANGE</span>
                  <span class="na">parameters</span><span class="pi">:</span>
                    <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
              <span class="na">master_item</span><span class="pi">:</span>
                <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
              <span class="na">tags</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">tag</span><span class="pi">:</span> <span class="s">Application</span>
                  <span class="na">value</span><span class="pi">:</span> <span class="s">APISIX-5XX</span>
              <span class="na">trigger_prototypes</span><span class="pi">:</span>
                <span class="pi">-</span>
                  <span class="na">uuid</span><span class="pi">:</span> <span class="s">263014e968b34f17b21eb4926359c83c</span>
                  <span class="na">expression</span><span class="pi">:</span> <span class="s1">'</span><span class="s">last(/service.apisix/apisix.httpcode.5xx[{#CODE},{#ROUTE},{#MATCHED_URI},{#MATCHED_HOST},{#SERVICE},{#CONSUMER},{#NODE}])&gt;0'</span>
                  <span class="na">name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}</span><span class="nv"> </span><span class="s">{#NODE}</span><span class="nv"> </span><span class="s">{#CODE}</span><span class="nv"> </span><span class="s">over</span><span class="nv"> </span><span class="s">0'</span>
                  <span class="na">priority</span><span class="pi">:</span> <span class="s">WARNING</span>
          <span class="na">master_item</span><span class="pi">:</span>
            <span class="na">key</span><span class="pi">:</span> <span class="s">apisix.info</span>
          <span class="na">lld_macro_paths</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">code'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#CONSUMER}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">consumer'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#HELP}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.help</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_HOST}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_host'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#MATCHED_URI}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">matched_uri'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NAME}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">$.name</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#NODE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">node'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#ROUTE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">route'</span><span class="s1">'</span><span class="s">]'</span>
            <span class="pi">-</span>
              <span class="na">lld_macro</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{#SERVICE}'</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">$.labels['</span><span class="s1">'</span><span class="s">service'</span><span class="s1">'</span><span class="s">]'</span>
          <span class="na">preprocessing</span><span class="pi">:</span>
            <span class="pi">-</span>
              <span class="na">type</span><span class="pi">:</span> <span class="s">PROMETHEUS_TO_JSON</span>
              <span class="na">parameters</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s1">'</span><span class="s">apisix_http_status{code=~"5.."}'</span>
</code></pre></div></div>

<h4 id="效果">效果</h4>
<p><img src="/assets/images/zabbix/zabbix-metrics.png" /></p>

<h4 id="参考">参考</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://www.zabbix.com/documentation/current/en/manual/discovery/low_level_discovery/examples/prometheus
</code></pre></div></div>]]></content><author><name>Your Name</name></author><category term="Monitor" /><summary type="html"><![CDATA[zabbix 使用prometheus数据格式实现自动发现]]></summary></entry><entry><title type="html">k8s安装metric server</title><link href="/kubernetes-metric-server/" rel="alternate" type="text/html" title="k8s安装metric server" /><published>2022-11-03T00:00:00+08:00</published><updated>2022-11-03T00:00:00+08:00</updated><id>/kubernetes-metric-server</id><content type="html" xml:base="/kubernetes-metric-server/"><![CDATA[<p>k8s安装metric server</p>

<h3 id="kubernetes-安装metric-server">kubernetes 安装metric server</h3>

<h4 id="k8s版本">k8s版本</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># kubectl version</span>
Client Version: version.Info<span class="o">{</span>Major:<span class="s2">"1"</span>, Minor:<span class="s2">"20"</span>, GitVersion:<span class="s2">"v1.20.15"</span>, GitCommit:<span class="s2">"8f1e5bf0b9729a899b8df86249b56e2c74aebc55"</span>, GitTreeState:<span class="s2">"clean"</span>, BuildDate:<span class="s2">"2022-01-19T17:27:39Z"</span>, GoVersion:<span class="s2">"go1.15.15"</span>, Compiler:<span class="s2">"gc"</span>, Platform:<span class="s2">"linux/amd64"</span><span class="o">}</span>
Server Version: version.Info<span class="o">{</span>Major:<span class="s2">"1"</span>, Minor:<span class="s2">"20"</span>, GitVersion:<span class="s2">"v1.20.15"</span>, GitCommit:<span class="s2">"8f1e5bf0b9729a899b8df86249b56e2c74aebc55"</span>, GitTreeState:<span class="s2">"clean"</span>, BuildDate:<span class="s2">"2022-01-19T17:23:01Z"</span>, GoVersion:<span class="s2">"go1.15.15"</span>, Compiler:<span class="s2">"gc"</span>, Platform:<span class="s2">"linux/amd64"</span><span class="o">}</span>
</code></pre></div></div>

<h4 id="作用">作用</h4>

<ul>
  <li>基于 CPU/内存的水平自动缩放</li>
  <li>自动调整/建议容器所需的资源</li>
</ul>

<h4 id="安装metric-server-的条件">安装metric server 的条件</h4>

<ul>
  <li>kube-apiserver 必须<a href="https://kubernetes.io/docs/tasks/access-kubernetes-api/configure-aggregation-layer/">启用聚合层</a>。</li>
  <li>节点必须启用 Webhook<a href="https://kubernetes.io/docs/reference/access-authn-authz/kubelet-authn-authz/">身份验证和授权</a>。</li>
  <li>Kubelet 证书需要由集群证书颁发机构签名（或通过传递<code class="language-plaintext highlighter-rouge">--kubelet-insecure-tls</code>给 Metrics Server 来禁用证书验证）</li>
  <li>容器运行时必须实现<a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-node/cri-container-stats.md">容器度量 RPC</a>（或具有<a href="https://github.com/google/cadvisor">cAdvisor</a>支持）</li>
  <li>网络应支持以下通信：
    <ul>
      <li>控制平面到 Metrics Server。控制平面节点需要到达 Metrics Server 的 pod IP 和端口 10250（或节点 IP 和自定义端口，如果<code class="language-plaintext highlighter-rouge">hostNetwork</code>启用）</li>
      <li>Metrics Server 到所有节点上的 Kubelet。Metrics 服务器需要到达节点地址和 Kubelet 端口。地址和端口在 Kubelet 中配置并作为 Node 对象的一部分发布。字段中的地址<code class="language-plaintext highlighter-rouge">.status.addresses</code>和端口<code class="language-plaintext highlighter-rouge">.status.daemonEndpoints.kubeletEndpoint.port</code>（默认为 10250）。Metrics Server 将根据<code class="language-plaintext highlighter-rouge">kubelet-preferred-address-types</code>命令行标志提供的列表（<code class="language-plaintext highlighter-rouge">InternalIP,ExternalIP,Hostname</code>清单中的默认值）选择第一个节点地址。</li>
    </ul>
  </li>
</ul>

<h4 id="使用聚合层扩展-kubernete-api">使用聚合层扩展 Kubernete API</h4>

<p>为了将原来的 API server 应用给拆分开，方便用户开发自己的 API server 集成进来，而不用直接修改 Kubernetes 官方仓库的代码，这样一来也能将 API server 解耦，用户可以通过附加的 API 扩展 Kubernetes， 而不局限于 Kubernetes 核心 API 提供的功能。</p>

<p>开启API的聚合参数</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">--requestheader-allowed-names=kubernetes \\</span>
<span class="s">--requestheader-extra-headers-prefix=X-Remote-Extra- \\</span>
<span class="s">--requestheader-group-headers=X-Remote-Group \\</span>
<span class="s">--requestheader-username-headers=X-Remote-User \\</span>
<span class="s">--enable-aggregator-routing=true \\</span>
<span class="s">--proxy-client-cert-file=/opt/kubernetes/ssl/server.pem \\</span>
<span class="s">--proxy-client-key-file=/opt/kubernetes/ssl/server-key.pem \\</span>
</code></pre></div></div>

<p><strong>kubeadm安装的集群不需配置<a href="http://yinyaliang.site/kubernetes-kubeadm-install/">参考</a></strong></p>

<h4 id="安装">安装</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
</code></pre></div></div>

<p>修改配置</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      <span class="pi">-</span> <span class="na">args</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">--cert-dir=/tmp</span>
        <span class="pi">-</span> <span class="s">--secure-port=4443</span>
        <span class="pi">-</span> <span class="s">--kubelet-preferred-address-types=InternalIP</span>   <span class="c1">#修改</span>
        <span class="pi">-</span> <span class="s">--kubelet-insecure-tls</span>                         <span class="c1">#增加</span>
        <span class="pi">-</span> <span class="s">--kubelet-use-node-status-port</span>
        <span class="pi">-</span> <span class="s">--metric-resolution=15s</span>
</code></pre></div></div>

<p>查看</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> kubectl get pods <span class="nt">-n</span> kube-system | <span class="nb">grep </span>metric
</code></pre></div></div>

<p>测试</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># kubectl top nodes --sort-by=cpu </span>
NAME          CPU<span class="o">(</span>cores<span class="o">)</span>   CPU%   MEMORY<span class="o">(</span>bytes<span class="o">)</span>   MEMORY%   
oif-omdhkm1   276m         13%    1457Mi          37%       
oif-omdhkm3   264m         13%    1347Mi          35%       
oif-omdhkm2   239m         11%    1257Mi          32%       
oif-omdhkp1   219m         2%     916Mi           3%        
oif-omdhkp3   202m         2%     910Mi           3%        
oif-omdhkp2   199m         2%     885Mi           3%        
oif-omdhkd1   123m         3%     1144Mi          14%  
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># kubectl top pod --sort-by=cpu -n osp-test</span>
NAME                              CPU<span class="o">(</span>cores<span class="o">)</span>   MEMORY<span class="o">(</span>bytes<span class="o">)</span>   
osp-test-api-6fcf98987c-qbr29     1m           18Mi            
osp-test-admin-5d9587c668-m8kw2   0m           4Mi 
</code></pre></div></div>

<h4 id="参考">参考</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://github.com/kubernetes-sigs/metrics-server
</code></pre></div></div>]]></content><author><name>Your Name</name></author><category term="Kubernetes" /><summary type="html"><![CDATA[k8s安装metric server]]></summary></entry><entry><title type="html">使用open()和create()创建文件</title><link href="/c-01/" rel="alternate" type="text/html" title="使用open()和create()创建文件" /><published>2022-11-02T00:00:00+08:00</published><updated>2022-11-02T00:00:00+08:00</updated><id>/c-01</id><content type="html" xml:base="/c-01/"><![CDATA[<p>使用open()和create()创建文件</p>

<h4 id="涉及函数">涉及函数</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>int open<span class="o">(</span> const char <span class="k">*</span>pathname, int flags<span class="o">)</span><span class="p">;</span>
int open<span class="o">(</span> const char <span class="k">*</span>pathname, int flags, mode_t mode<span class="o">)</span><span class="p">;</span>

int creat<span class="o">(</span>const char <span class="k">*</span>pathname, mode_t mode<span class="o">)</span><span class="p">;</span>
</code></pre></div></div>

<p>在下面的情形下两种函数的功能一致</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>open<span class="o">(</span>const char<span class="k">*</span> pathname, <span class="o">(</span>O_CREAT|O_WRONLY|O_TRUNC<span class="o">)</span>,mode_t mode<span class="o">)</span><span class="p">;</span>
creat<span class="o">(</span>const char<span class="k">*</span> pathname,mode_t mode<span class="o">)</span><span class="p">;</span>
</code></pre></div></div>

<h4 id="命令">命令</h4>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">"stdio.h"</span><span class="cp">
#include</span> <span class="cpf">"sys/types.h"</span><span class="cp">
#include</span> <span class="cpf">"sys/stat.h"</span><span class="cp">
#include</span> <span class="cpf">"fcntl.h"</span><span class="cp">
#include</span> <span class="cpf">"unistd.h"</span><span class="cp">
#include</span> <span class="cpf">"error.h"</span><span class="cp">
#include</span> <span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
        <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"1.creat 2.open</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
                <span class="k">if</span><span class="p">((</span><span class="n">fd</span><span class="o">=</span><span class="n">creat</span><span class="p">(</span><span class="s">"examp.c"</span><span class="p">,</span><span class="n">S_IRWXU</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
                <span class="p">{</span>
                        <span class="n">perror</span><span class="p">(</span><span class="s">"open"</span><span class="p">);</span>
                        <span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                        <span class="n">printf</span><span class="p">(</span><span class="s">"create file examp.c"</span><span class="p">);</span>
                <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>
        <span class="p">{</span>
                <span class="k">if</span> <span class="p">((</span><span class="n">fd</span><span class="o">=</span><span class="n">open</span><span class="p">(</span><span class="s">"examp.c"</span><span class="p">,</span><span class="n">O_CREAT</span><span class="o">|</span><span class="n">O_EXCL</span><span class="p">,</span><span class="n">S_IRUSR</span><span class="o">|</span><span class="n">S_IWUSR</span><span class="p">)))</span>
                <span class="p">{</span>
                        <span class="n">perror</span><span class="p">(</span><span class="s">"open"</span><span class="p">);</span>
                        <span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                        <span class="n">printf</span><span class="p">(</span><span class="s">"create file examp.c"</span><span class="p">);</span>
                <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">"your choice wrong"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="n">close</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="参数">参数</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>create()  # S_IRWXU00700 权限，代表该文件所有者具有可读、可写及可执行的权限

O_CREAT|O_EXCL # 检查文件是否存在。文件若不存在则建立该文件，否则将导致打开文件错误
S_IRUSR|S_IWUSR # 文件权限 600
</code></pre></div></div>

<h4 id="编译">编译</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcc <span class="nt">-o</span> <span class="nb">test </span>test.c 
</code></pre></div></div>

<h4 id="参考">参考</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://wizardforcel.gitbooks.io/linux-c-api-ref/content/143.html
</code></pre></div></div>]]></content><author><name>Your Name</name></author><category term="Linux" /><summary type="html"><![CDATA[使用open()和create()创建文件]]></summary></entry><entry><title type="html">常用命令</title><link href="/docker-command/" rel="alternate" type="text/html" title="常用命令" /><published>2022-11-01T00:00:00+08:00</published><updated>2022-11-01T00:00:00+08:00</updated><id>/docker-command</id><content type="html" xml:base="/docker-command/"><![CDATA[<p>Mysql 命令记录</p>

<h4 id="删除none的images">删除none的images</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker images  | <span class="nb">grep</span> <span class="s1">'&lt;none&gt;'</span> | <span class="nb">awk</span> <span class="s1">'{print $3}'</span> | xargs  docker image <span class="nb">rm</span> <span class="nt">-f</span> <span class="o">{}</span>
</code></pre></div></div>

<h4 id="更新k8s的configmap">更新k8s的configmap</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl create configmap osptest <span class="nt">--from-file</span><span class="o">=</span>test.yaml <span class="nt">-o</span> yaml <span class="nt">-n</span> osp-test <span class="nt">--dry-run</span> | kubectl apply <span class="nt">-f</span> -
</code></pre></div></div>

<h4 id="拉取指定远程分支到本地">拉取指定远程分支到本地</h4>
<p>新建仓库</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">mkdir </span>gitrepo
<span class="nv">$ </span><span class="nb">cd </span>giterpo
<span class="nv">$ </span>git init
</code></pre></div></div>
<p>拉取远程指定分支</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git remote add origin https://github.com/zjZSTU/zjzstu.github.com.git
<span class="nv">$ </span>git fetch origin dev
</code></pre></div></div>
<p>新建本地分支并关联到指定远程分支</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git checkout <span class="nt">-b</span> dev origin/dev
</code></pre></div></div>]]></content><author><name>Your Name</name></author><category term="Docker" /><summary type="html"><![CDATA[Mysql 命令记录]]></summary></entry></feed>